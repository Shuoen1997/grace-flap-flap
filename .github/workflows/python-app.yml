# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application
env:
  CHANNEL_ACCESS_TOKEN: ZBDzBgZ0qs73mCyLo0Z46UvYNRQ5zH+tSAZP9JhCmT/kYSYEz+tOaX/wFfgXUPlhLX1Mg9rywDp7Bu9CcN+jGFUzHvBZMR6I2imKJ+roftWe4JMkFVnedM+P0sCEizWDSL4+BbxvMoWGzG6EHpb35AdB04t89/1O/w1cDnyilFU=
  CHANNEL_SECRET: a51fd4704f849eaf27dcac992021bcd8
  SESSION_KEY: \x17\x87\x17\xee\x18\x93\x04\xba\x1b\xe7\x7f5\xf1-K\xdf
  SECRET_PASSWORD: seaflapflap
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Cache
      uses: actions/cache@v2.1.3
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: ~/.cache/pip
        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: | 
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

